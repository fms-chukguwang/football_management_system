{
    "name": "fms",
    "version": "0.0.1",
    "description": "",
    "author": "",
    "private": true,
    "license": "UNLICENSED",
    "scripts": {
        "build": "nest build",
        "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
        "start": "nest start",
        "start:dev": "nest start --watch",
        "start:debug": "nest start --debug --watch",
        "start:prod": "node dist/main",
        "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
        "test": "jest",
        "test:seed": "for /L %i in (1,1,10) do jest --config ./test/jest-e2e.json --runInBand --forceExit --detectOpenHandles",
        "test:seedJo": "for i in {1..50}; do jest --config ./test/jest-e2e.json --runInBand --coverage --forceExit --detectOpenHandles; done",
        "test:seedNoCoverageJo": "for i in {1..50}; do jest --config ./test/jest-e2e.json --runInBand --forceExit --detectOpenHandles; done",
        "test:seedJo3": "jest --config ./test/jest-e2e.json --runInBand --coverage --forceExit --detectOpenHandles",
        "test:watch": "jest --watch",
        "test:log": "  jest --config ./test/jest-e2e.json --runInBand --watch  --verbose false;",
        "test:cov": "jest --coverage --forceExit",
        "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "test:match": "jest --config test/match/jest-match.json",
        "test:seed2": "for /L %i in (1,1,10) do jest --config ./test/match/jest-match.json --runInBand --forceExit --detectOpenHandles",
        "test:seed2Mac": "for i in {1..10}; do jest --config ./test/match/jest-match.json --runInBand --forceExit --detectOpenHandles; done",
        "test:seed2Jo": "for i in {1..50}; do jest --config  ./test/match/jest-match.json  --runInBand --forceExit --detectOpenHandles; done",
        "test:indexing": "for i in {1..1000}; do jest --config  ./test/indexing/jest-indexing.json  --runInBand --forceExit --detectOpenHandles; done",
        "test:seed4Jo": "jest --config  ./test/match/jest-match.json  --runInBand --coverage --forceExit --detectOpenHandles ",
        "test:tournament": "jest --config ./test/tournament/jest-tournament.json",
        "test:chatsService": "jest --verbose src/chats/chats.service.spec.ts",
        "test:chatsController": "jest --verbose src/chats/chats.controller.spec.ts",
        "test:commonService": "jest --verbose src/common/common.service.spec.ts --coverage",
        "test:teamService": "jest --verbose src/team/team.service.spec.ts",
        "test:teamController": "jest --verbose src/team/team.controller.spec.ts",
        "test:tournamentService": "jest --verbose src/tournament/tournament.service.spec.ts",
        "test:tournamentController": "jest --verbose src/tournament/tournament.controller.spec.ts",
        "test:adminService": "jest --verbose src/admin/admin.service.spec.ts",
        "test:adminController": "jest --verbose src/admin/admin.controller.spec.ts",
        "test:awsService": "jest --verbose src/aws/aws.service.spec.ts",
        "test:statisticsController": "jest --verbose src/statistics/statistics.controller.spec.ts",
        "test:statisticsService": "jest --verbose src/statistics/statistics.service.spec.ts",
        "test:messagesController": "jest --verbose src/messages/messages.controller.spec.ts",
        "test:messagesService": "jest --verbose src/messages/messages.service.spec.ts",
        "test:chatsGateway": "jest --verbose src/chats/chats.gateway.spec.ts",
        "test:profileController": "jest --verbose src/profile/profile.controller.spec.ts",
        "test:profileService": "jest --verbose src/profile/profile.service.spec.ts",
        "test:taskService": "jest --verbose src/task/task.service.spec.ts",
        "seed": "ts-node src/seed.ts",
        "seed:ho0": "ts-node -r tsconfig-paths/register ./node_modules/typeorm-extension/bin/cli.cjs seed:run",
        "seed:match": "ts-node -r tsconfig-paths/register src/database/seeds/match.seeder.ts",
        "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js --dataSource ./data-source.ts",
        "migration:create": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:create ./src/database/migrations/Migration",
        "migration:generate": "npm run typeorm migration:generate ./src/database/migrations/Migration",
        "migration:run": "npm run typeorm  migration:run",
        "migration:revert": "npm run typeorm migration:revert"
    },
    "dependencies": {
        "@aws-sdk/client-s3": "^3.495.0",
        "@aws-sdk/s3-request-presigner": "^3.496.0",
        "@nestjs/cache-manager": "^2.2.0",
        "@nestjs/common": "^10.3.0",
        "@nestjs/config": "^3.1.1",
        "@nestjs/core": "^10.3.0",
        "@nestjs/jwt": "^10.2.0",
        "@nestjs/mongoose": "^10.0.2",
        "@nestjs/passport": "^10.0.3",
        "@nestjs/platform-express": "^10.0.0",
        "@nestjs/platform-socket.io": "^10.3.0",
        "@nestjs/schedule": "^4.0.0",
        "@nestjs/swagger": "^7.1.17",
        "@nestjs/typeorm": "^10.0.1",
        "@nestjs/websockets": "^10.3.0",
        "@sentry/minimal": "^6.19.7",
        "@sentry/node": "^7.99.0",
        "@sentry/profiling-node": "^1.3.5",
        "@slack/client": "^5.0.2",
        "@slack/webhook": "^7.0.2",
        "@types/multer": "^1.4.11",
        "artillery": "^2.0.5",
        "axios": "^1.6.7",
        "bcrypt": "^5.1.1",
        "cache-manager": "^5.3.2",
        "cache-manager-ioredis": "^2.1.0",
        "cache-manager-redis-yet": "^4.1.2",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.14.0",
        "cors": "^2.8.5",
        "ioredis": "^5.3.2",
        "joi": "^17.11.0",
        "lodash.isarguments": "^3.1.0",
        "moment-timezone": "^0.5.45",
        "mongoose": "^8.1.0",
        "multer": "^1.4.5-lts.1",
        "multer-s3": "^3.0.1",
        "mysql2": "^3.7.1",
        "nest-raven": "^10.0.1",
        "nest-winston": "^1.9.4",
        "nestjs-redis": "^1.3.3",
        "nestjs-seeder": "^0.3.2",
        "nodemailer": "^6.9.8",
        "passport": "^0.7.0",
        "passport-jwt": "^4.0.1",
        "passport-kakao": "^1.0.1",
        "passport-local": "^1.0.0",
        "reflect-metadata": "^0.1.13",
        "rxjs": "^7.8.1",
        "socket.io": "^4.7.4",
        "swagger": "^0.7.5",
        "typeorm": "^0.3.19",
        "typeorm-extension": "^3.4.0",
        "typeorm-naming-strategies": "^4.1.0",
        "typeorm-transactional-cls-hooked": "^0.1.21",
        "winston": "^3.11.0",
        "winston-daily-rotate-file": "^4.7.1",
        "xml2js": "^0.6.2"
    },
    "devDependencies": {
        "@nestjs/cli": "^10.0.0",
        "@nestjs/schematics": "^10.0.0",
        "@nestjs/testing": "^10.0.0",
        "@types/bcrypt": "^5.0.2",
        "@types/cache-manager": "^4.0.6",
        "@types/cache-manager-ioredis": "^2.0.6",
        "@types/cache-manager-redis-store": "^2.0.4",
        "@types/express": "^4.17.17",
        "@types/jest": "^29.5.2",
        "@types/node": "^20.3.1",
        "@types/passport": "^1.0.16",
        "@types/passport-kakao": "^1.0.3",
        "@types/passport-local": "^1.0.38",
        "@types/redis": "^4.0.11",
        "@types/supertest": "^6.0.0",
        "@typescript-eslint/eslint-plugin": "^6.0.0",
        "@typescript-eslint/parser": "^6.0.0",
        "cross-env": "^7.0.3",
        "eslint": "^8.56.0",
        "eslint-config-prettier": "^9.0.0",
        "eslint-plugin-prettier": "^5.0.0",
        "jest": "^29.5.0",
        "prettier": "^3.0.0",
        "source-map-support": "^0.5.21",
        "supertest": "^6.3.3",
        "ts-jest": "^29.1.0",
        "ts-loader": "^9.4.3",
        "ts-node": "^10.9.2",
        "tsconfig-paths": "^4.2.0",
        "typescript": "^5.3.3"
    },
    "jest": {
        "moduleFileExtensions": [
            "js",
            "json",
            "ts"
        ],
        "rootDir": "src",
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "collectCoverageFrom": [
            "**/*.(t|j)s"
        ],
        "coverageDirectory": "../coverage",
        "testEnvironment": "node",
        "moduleNameMapper": {
            "^src/(.*)$": "<rootDir>/$1"
        },
        "coveragePathIgnorePatterns": [
            ".module.ts",
            ".entity.ts",
            ".strategy.ts",
            "/guards",
            "/guard",
            "/decorators",
            "/dtos",
            "src/configs",
            "src/enum",
            "/detectOpenHandles",
            "src/seed.ts",
            "src/main.ts",
            "src/auth/guards",
            "src/auth/strategies",
            "src/auth/decorators",
            "src/chats/guard",
            "src/configs",
            "src/email",
            "src/database/factories",
            "src/database/migrations",
            "src/database/seeds",
            "src/seed",
            "src/common/const",
            "src/common/decorators",
            "src/common/interfaces",
            "src/common/types",
            "src/common/utils",
            "src/common/exception",
            "src/common/exception-filter",
            "src/common/interceptors",
            "src/common/middleware",
            "src/common/return-type",
            "src/statistics/statistics.service.test.ts",
            "src/task/task.controller.ts"
        ]
    }
}
